{"version":3,"sources":["redux/others/actions.js","redux/others/types.js","redux/posts/types.js","redux/posts/actions.js","redux/liked/actions.js","redux/liked/types.js","redux/disliked/actions.js","redux/disliked/types.js","components/PostCard.js","pages/Home.js","pages/Create.js","components/DisLikeCard.js","pages/Disliked.js","components/LikeCard.js","pages/Liked.js","components/SinglePostCard.js","pages/Post.js","pages/PostUpdate.js","pages/Search.js","components/Navbar.js","App.js","serviceWorker.js","redux/posts/reducer.js","redux/liked/reducer.js","redux/disliked/reducer.js","redux/others/reducer.js","redux/store.js","index.js"],"names":["changepage","page","type","get_posts","posts","remove_post","delete_id","add_liked","new_post","add_disliked","PostCard","className","Card","fluid","Content","Header","this","props","title","Description","body","extra","Button","basic","color","onClick","array_id","history","push","Component","connect","state","dispatch","post","Home","changeNavPage","location","pathname","map","key","getPosts","Create","handleSubmit","e","preventDefault","add_post","Form","onSubmit","Field","placeholder","value","name","onChange","setState","target","TextArea","label","remove_disliked","Disliked","componentDidMount","dislikedposts","DisLikeCard","disliked","remove_liked","Liked","likedposts","LikeCard","liked","Post","SinglePostCard","match","params","id","PostUpdate","update_post","console","log","updated_post","Search","search","Navbar","handleItemClick","activeItem","Menu","secondary","Item","active","to","others","nav_page","App","a","axios","method","url","res","data","style","width","margin","Container","path","component","exact","Boolean","window","hostname","initialState","rootReducer","combineReducers","action","temp_posts","splice","temp_liked","temp_disliked","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d68f6b16.chunk.js","sourcesContent":["import { NAV_CHANGE_PAGE } from \"./types\";\n\nexport default function changepage(page) {\n    return {\n        type: NAV_CHANGE_PAGE,\n        page,\n    };\n}\n","export const NAV_CHANGE_PAGE = \"NAV_CHANGE_PAGE\";\n","export const GET_POSTS = \"GET_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const REMOVE_POST = \"DELETE_POST\";\nexport const LIKE_POST = \"LIKE_POSt\";\nexport const DISLIKE_POST = \"DISLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\n","import {\n    GET_POSTS,\n    ADD_POST,\n    REMOVE_POST,\n    LIKE_POST,\n    DISLIKE_POST,\n    UPDATE_POST,\n} from \"./types\";\n\nexport const get_posts = (posts) => {\n    return {\n        type: GET_POSTS,\n        posts,\n    };\n};\n\nexport const add_post = (new_post) => {\n    return {\n        type: ADD_POST,\n        new_post,\n    };\n};\n\nexport const remove_post = (delete_id) => {\n    return {\n        type: REMOVE_POST,\n        delete_id,\n    };\n};\n\nexport const like_post = (array_id) => {\n    return {\n        type: LIKE_POST,\n        array_id,\n    };\n};\n\nexport const dislike_post = (array_id) => {\n    return {\n        type: DISLIKE_POST,\n        array_id,\n    };\n};\nexport const update_post = (updated_post, array_id) => {\n    return {\n        type: UPDATE_POST,\n        updated_post,\n        array_id,\n    };\n};\n","import { ADD_LIKED, REMOVE_LIKED } from \"./types\";\n\nexport const add_liked = (new_post) => {\n    return {\n        type: ADD_LIKED,\n        new_post,\n    };\n};\n\nexport const remove_liked = (delete_id) => {\n    return {\n        type: REMOVE_LIKED,\n        delete_id,\n    };\n};\n","export const ADD_LIKED = \"ADD_LIKED\";\nexport const REMOVE_LIKED = \"REMOVE_LIKED\";\n","import { ADD_DISLIKED, REMOVE_DISLIKED } from \"./types\";\n\nexport const add_disliked = (new_post) => {\n    return {\n        type: ADD_DISLIKED,\n        new_post,\n    };\n};\n\nexport const remove_disliked = (delete_id) => {\n    return {\n        type: REMOVE_DISLIKED,\n        delete_id,\n    };\n};\n","export const ADD_DISLIKED = \"ADD_DISLIKED\";\nexport const REMOVE_DISLIKED = \"REMOVE_DISLIKED\";\n","import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { remove_post } from \"../redux/posts/actions\";\nimport { connect } from \"react-redux\";\nimport { add_liked } from \"../redux/liked/actions\";\nimport { add_disliked } from \"../redux/disliked/actions\";\nexport class PostCard extends Component {\n    render() {\n        // console.log(this.props.like)\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6 mt-4\">\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{this.props.title}</Card.Header>\n                        </Card.Content>\n                        <Card.Content>\n                            <Card.Description>\n                                {this.props.body}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className=\"ui three buttons\">\n                                <Button\n                                    basic\n                                    color=\"green\"\n                                    onClick={() => {\n                                        this.props.add_liked(\n                                            this.props.posts.posts[\n                                                this.props.array_id\n                                            ]\n                                        );\n                                    }}\n                                >\n                                    like\n                                </Button>\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.add_disliked(\n                                            this.props.posts.posts[\n                                                this.props.array_id\n                                            ]\n                                        );\n                                    }}\n                                >\n                                    dislike\n                                </Button>\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.remove_post(\n                                            this.props.array_id\n                                        );\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                        </Card.Content>\n                        <Button\n                            onClick={() => {\n                                this.props.history.push(\n                                    `/ceatask/posts/${this.props.array_id}`\n                                );\n                            }}\n                        >\n                            Preview\n                        </Button>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state, props) => {\n    return {\n        posts: state.posts,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        remove_post: (array_id) => {\n            dispatch(remove_post(array_id));\n        },\n        add_liked: (post) => {\n            dispatch(add_liked(post));\n        },\n        add_disliked: (post) => {\n            dispatch(add_disliked(post));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(PostCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport changepage from \"../redux/others/actions\";\nimport { get_posts } from \"../redux/posts/actions\";\nimport PostCard from \"../components/PostCard\";\nimport { Button } from \"semantic-ui-react\";\nexport class Home extends Component {\n    componentDidMount() {\n        this.props.changeNavPage(this.props.location.pathname);\n    }\n\n    render() {\n        const { posts } = this.props.posts;\n        return (\n            <div>\n                <Button\n                    fluid\n                    onClick={() => {\n                        this.props.history.push(\"/ceatask/posts/create\");\n                    }}\n                >\n                    create a new one?\n                </Button>\n                {posts.map((post, array_id) => {\n                    return (\n                        <div key={array_id}>\n                            <PostCard\n                                title={post.title}\n                                body={post.body}\n                                array_id={array_id}\n                                history={this.props.history}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        posts: state.posts,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        changeNavPage: (page) => {\n            dispatch(changepage(page));\n        },\n        getPosts: (posts) => {\n            dispatch(get_posts(posts));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { add_post } from \"../redux/posts/actions\";\n\nexport class Create extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: \"\",\n            body: \"\",\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.add_post(this.state);\n        this.props.history.push(\"/ceatask\");\n    };\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Field>\n                        <label>title</label>\n                        <input\n                            placeholder=\"title\"\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={(e) => {\n                                this.setState({\n                                    [e.target.name]: e.target.value,\n                                });\n                            }}\n                        />\n                    </Form.Field>\n                    <Form.TextArea\n                        label=\"body\"\n                        placeholder=\"Tell us more about you...\"\n                        value={this.state.body}\n                        name=\"body\"\n                        onChange={(e) => {\n                            this.setState({\n                                [e.target.name]: e.target.value,\n                            });\n                        }}\n                    />\n\n                    <Button type=\"submit\">Submit</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        add_post: (new_post) => {\n            dispatch(add_post(new_post));\n        },\n    };\n};\n\nconst mapStatetoProps = (state) => {\n    return {\n        state,\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Create);\n","import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { remove_disliked } from \"../redux/disliked/actions\";\nimport { connect } from \"react-redux\";\n\nexport class PostCard extends Component {\n    render() {\n        // console.log(this.props.like)\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6 mt-4\">\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{this.props.title}</Card.Header>\n                        </Card.Content>\n                        <Card.Content>\n                            <Card.Description>\n                                {this.props.body}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className=\"ui  buttons\">\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.remove_disliked(\n                                            this.props.array_id\n                                        );\n                                    }}\n                                >\n                                    Remove\n                                </Button>\n                            </div>\n                        </Card.Content>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state, props) => {\n    return {\n        posts: state.posts,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        remove_disliked: (array_id) => {\n            dispatch(remove_disliked(array_id));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(PostCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport changepage from \"../redux/others/actions\";\nimport DisLikeCard from \"../components/DisLikeCard\";\n\nexport class Disliked extends Component {\n    componentDidMount = () => {\n        this.props.changeNavPage(this.props.location.pathname);\n    };\n    render() {\n        return (\n            <div>\n                {this.props.dislikedposts.map((post, array_id) => {\n                    return (\n                        <div key={array_id}>\n                            <DisLikeCard\n                                title={post.title}\n                                body={post.body}\n                                array_id={array_id}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        dislikedposts: state.disliked.disliked,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        changeNavPage: (page) => {\n            dispatch(changepage(page));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Disliked);\n","import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { remove_liked } from \"../redux/liked/actions\";\nimport { connect } from \"react-redux\";\n\nexport class PostCard extends Component {\n    render() {\n        // console.log(this.props.like)\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6 mt-4\">\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{this.props.title}</Card.Header>\n                        </Card.Content>\n                        <Card.Content>\n                            <Card.Description>\n                                {this.props.body}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className=\"ui  buttons\">\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.remove_liked(\n                                            this.props.array_id\n                                        );\n                                    }}\n                                >\n                                    Remove\n                                </Button>\n                            </div>\n                        </Card.Content>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state, props) => {\n    return {\n        posts: state.posts,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        remove_liked: (array_id) => {\n            dispatch(remove_liked(array_id));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(PostCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport changepage from \"../redux/others/actions\";\nimport LikeCard from \"../components/LikeCard\";\nexport class Liked extends Component {\n    componentDidMount = () => {\n        this.props.changeNavPage(this.props.location.pathname);\n    };\n\n    render() {\n        return (\n            <div>\n                {this.props.likedposts.map((post, array_id) => {\n                    return (\n                        <div key={array_id}>\n                            <LikeCard\n                                title={post.title}\n                                body={post.body}\n                                array_id={array_id}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state) => {\n    return {\n        likedposts: state.liked.liked,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        changeNavPage: (page) => {\n            dispatch(changepage(page));\n        },\n    };\n};\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Liked);\n","import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { remove_post } from \"../redux/posts/actions\";\nimport { connect } from \"react-redux\";\nimport { add_liked } from \"../redux/liked/actions\";\nimport { add_disliked } from \"../redux/disliked/actions\";\nexport class PostCard extends Component {\n    render() {\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6 mt-4\">\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{this.props.title}</Card.Header>\n                        </Card.Content>\n                        <Card.Content>\n                            <Card.Description>\n                                {this.props.body}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className=\"ui three buttons\">\n                                <Button\n                                    basic\n                                    color=\"green\"\n                                    onClick={() => {\n                                        this.props.add_liked(\n                                            this.props.posts.posts[\n                                                this.props.array_id\n                                            ]\n                                        );\n                                    }}\n                                >\n                                    like\n                                </Button>\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.add_disliked(\n                                            this.props.posts.posts[\n                                                this.props.array_id\n                                            ]\n                                        );\n                                    }}\n                                >\n                                    dislike\n                                </Button>\n                                <Button\n                                    basic\n                                    color=\"red\"\n                                    onClick={() => {\n                                        this.props.remove_post(\n                                            this.props.array_id\n                                        );\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                        </Card.Content>\n                        <Button\n                            onClick={() => {\n                                this.props.history.push(\n                                    `/ceatask/posts/${this.props.array_id}/update`\n                                );\n                            }}\n                        >\n                            update\n                        </Button>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state, props) => {\n    return {\n        posts: state.posts,\n        liked: state.liked,\n    };\n};\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        remove_post: (array_id) => {\n            dispatch(remove_post(array_id));\n        },\n        add_liked: (post) => {\n            dispatch(add_liked(post));\n        },\n        add_disliked: (post) => {\n            dispatch(add_disliked(post));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(PostCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SinglePostCard from \"../components/SinglePostCard\";\n\nexport class Post extends Component {\n    render() {\n        return (\n            <div>\n                <SinglePostCard\n                    title={\n                        this.props.posts[this.props.match.params.id].title\n                    }\n                    body={\n                        this.props.posts[this.props.match.params.id].body\n                    }\n                    array_id={this.props.match.params.id}\n                    history={this.props.history}\n                />\n            </div>\n        );\n    }\n}\nconst mapStatetoProps = (state) => {\n    return {\n        posts: state.posts.posts,\n    };\n};\n\nexport default connect(mapStatetoProps, {})(Post);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { update_post } from \"../redux/posts/actions\";\n\nexport class PostUpdate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: this.props.title,\n            body: this.props.body,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.update_post(this.state, this.props.match.params.id);\n        this.props.history.push(\n            `/ceatask/posts/${this.props.match.params.id}`\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Field>\n                        <label>title</label>\n                        <input\n                            placeholder=\"title\"\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={(e) => {\n                                this.setState({\n                                    [e.target.name]: e.target.value,\n                                });\n                            }}\n                        />\n                    </Form.Field>\n                    <Form.TextArea\n                        label=\"body\"\n                        placeholder=\"Tell us more about you...\"\n                        value={this.state.body}\n                        name=\"body\"\n                        onChange={(e) => {\n                            this.setState({\n                                [e.target.name]: e.target.value,\n                            });\n                        }}\n                    />\n\n                    <Button type=\"submit\">Update</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        update_post: (updated_post, array_id) => {\n            dispatch(update_post(updated_post, array_id));\n        },\n    };\n};\n\nconst mapStatetoProps = (state, props) => {\n    console.log(state);\n    return {\n        title: state.posts.posts[props.match.params.id].title,\n        body: state.posts.posts[props.match.params.id].body,\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(PostUpdate);\n","import React, { Component } from \"react\";\n\nexport class Search extends Component {\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <h1>seach page {this.props.location.search}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    handleItemClick = {};\n\n    render() {\n        const { activeItem } = this.props;\n        return (\n            <div>\n                <Menu secondary>\n                    <Menu.Item\n                        name=\"home\"\n                        active={activeItem === \"/ceatask\"}\n                    >\n                        <Link to=\"/ceatask\">Home</Link>\n                    </Menu.Item>\n                    <Menu.Item\n                        name=\"liked\"\n                        active={activeItem === \"/ceatask/liked\"}\n                    >\n                        <Link to=\"/ceatask/liked\">liked</Link>\n                    </Menu.Item>\n                    <Menu.Item\n                        name=\"disliked\"\n                        active={activeItem === \"/ceatask/disliked\"}\n                    >\n                        <Link to=\"/ceatask/disliked\">disliked</Link>\n                    </Menu.Item>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return { activeItem: state.others.nav_page };\n};\n\nexport default connect(mapStatetoProps)(Navbar);\n","import { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Create from \"./pages/Create\";\nimport Disliked from \"./pages/Disliked\";\nimport Liked from \"./pages/Liked\";\nimport Post from \"./pages/Post\";\nimport PostUpdate from \"./pages/PostUpdate\";\nimport Search from \"./pages/Search\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { get_posts } from \"./redux/posts/actions\";\n\nimport Navbar from \"./components/Navbar\";\nimport { Container } from \"semantic-ui-react\";\n\nimport React, { Component } from \"react\";\n\nexport class App extends Component {\n    componentDidMount = async () => {\n        try {\n            const res = await axios({\n                method: \"get\",\n                url: \"https://jsonplaceholder.typicode.com/posts\",\n            });\n            console.log(res.data);\n            this.props.getPosts(res.data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <div style={{ width: \"95%\", margin: \"auto\" }}>\n                        <Navbar />\n                    </div>\n                    <Container>\n                        <Switch>\n                            <Route\n                                path=\"/ceatask\"\n                                component={Home}\n                                exact\n                            />\n                            <Route\n                                path=\"/ceatask/liked\"\n                                component={Liked}\n                                exact\n                            />\n                            <Route\n                                path=\"/ceatask/disliked\"\n                                component={Disliked}\n                                exact\n                            />\n                            <Route\n                                path=\"ceatask/posts/create\"\n                                component={Create}\n                                exact\n                            />\n                            <Route\n                                path=\"/ceatask/posts/:id\"\n                                component={Post}\n                                exact\n                            />\n                            <Route\n                                path=\"/ceatask/posts/:id/update\"\n                                component={PostUpdate}\n                                exact\n                            />\n                            <Route path=\"/search\" component={Search} />\n                        </Switch>\n                    </Container>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        posts: state.posts,\n    };\n};\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        getPosts: (posts) => {\n            dispatch(get_posts(posts));\n        },\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_POSTS, ADD_POST, REMOVE_POST, UPDATE_POST } from \"./types\";\n\nconst initialState = {\n    posts: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let temp_posts = [];\n    switch (action.type) {\n        case GET_POSTS:\n            return {\n                posts: action.posts,\n            };\n        case ADD_POST:\n            temp_posts = [action.new_post, ...state.posts];\n\n            return {\n                posts: [...temp_posts],\n            };\n\n        case REMOVE_POST:\n            temp_posts = [...state.posts];\n            temp_posts.splice(action.delete_id, 1);\n            return {\n                posts: [...temp_posts],\n            };\n        case UPDATE_POST:\n            state.posts[action.array_id].title = action.updated_post.title;\n            state.posts[action.array_id].body = action.updated_post.body;\n            return state;\n        default:\n            return state;\n    }\n};\n","import { ADD_LIKED, REMOVE_LIKED } from \"./types\";\n\nconst initialState = {\n    liked: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let temp_liked = [];\n    switch (action.type) {\n        case ADD_LIKED:\n            temp_liked = [action.new_post, ...state.liked];\n            return {\n                liked: [...temp_liked],\n            };\n\n        case REMOVE_LIKED:\n            temp_liked = [...state.liked];\n            temp_liked.splice(action.delete_id, 1);\n            return {\n                liked: [...temp_liked],\n            };\n\n        default:\n            return state;\n    }\n};\n","import { ADD_DISLIKED, REMOVE_DISLIKED } from \"./types\";\n\nconst initialState = {\n    disliked: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let temp_disliked = [];\n    switch (action.type) {\n        case ADD_DISLIKED:\n            temp_disliked = [action.new_post, ...state.disliked];\n            return {\n                disliked: [...temp_disliked],\n            };\n\n        case REMOVE_DISLIKED:\n            temp_disliked = [...state.disliked];\n            temp_disliked.splice(action.delete_id, 1);\n            return {\n                disliked: [...temp_disliked],\n            };\n\n        default:\n            return state;\n    }\n};\n","import { NAV_CHANGE_PAGE } from \"./types\";\n\nconst initialState = {\n    nav_page: \"/\",\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NAV_CHANGE_PAGE:\n            return {\n                ...state,\n                nav_page: action.page,\n            };\n\n        default:\n            return state;\n    }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { reducer as posts_reducer } from \"./posts/reducer\";\nimport { reducer as liked_reducer } from \"./liked/reducer\";\nimport { reducer as disliked_reducer } from \"./disliked/reducer\";\nimport { reducer as other_reducer } from \"./others/reducer\";\n\nconst rootReducer = combineReducers({\n    posts: posts_reducer,\n    liked: liked_reducer,\n    disliked: disliked_reducer,\n    others: other_reducer,\n});\n\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"semantic-ui-css/semantic.min.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}